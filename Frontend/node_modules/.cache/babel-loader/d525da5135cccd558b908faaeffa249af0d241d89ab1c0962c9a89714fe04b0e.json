{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bcit t4\\\\Comp4537\\\\Labs\\\\COMP4537-AI_Project\\\\Frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button, Alert, Card } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [status, setStatus] = useState({\n    type: '',\n    message: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      return setStatus({\n        type: 'danger',\n        message: 'Passwords do not match'\n      });\n    }\n    setLoading(true);\n    try {\n      await axios.put(`http://localhost:5000/api/auth/reset-password/${token}`, {\n        password\n      });\n      setStatus({\n        type: 'success',\n        message: 'Password has been reset successfully'\n      });\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setStatus({\n        type: 'danger',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error resetting password'\n      });\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"shadow-sm\",\n      style: {\n        maxWidth: '500px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Set New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), status.message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: status.type,\n          children: status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter new password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirm new password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            className: \"w-100\",\n            disabled: loading,\n            children: loading ? 'Resetting...' : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"zY+TdCLjVX91GWGsDOOD8WP+34A=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Container","Form","Button","Alert","Card","useNavigate","useParams","axios","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","status","setStatus","type","message","loading","setLoading","navigate","token","handleSubmit","e","preventDefault","put","setTimeout","error","_error$response","_error$response$data","response","data","className","children","style","maxWidth","margin","Body","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["D:/Bcit t4/Comp4537/Labs/COMP4537-AI_Project/Frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Form, Button, Alert, Card } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [status, setStatus] = useState({ type: '', message: '' });\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n    const { token } = useParams();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            return setStatus({\r\n                type: 'danger',\r\n                message: 'Passwords do not match'\r\n            });\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/auth/reset-password/${token}`, { \r\n                password \r\n            });\r\n            setStatus({\r\n                type: 'success',\r\n                message: 'Password has been reset successfully'\r\n            });\r\n            setTimeout(() => navigate('/login'), 3000);\r\n        } catch (error) {\r\n            setStatus({\r\n                type: 'danger',\r\n                message: error.response?.data?.message || 'Error resetting password'\r\n            });\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Card className=\"shadow-sm\" style={{ maxWidth: '500px', margin: '0 auto' }}>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Set New Password</h2>\r\n                    {status.message && (\r\n                        <Alert variant={status.type}>{status.message}</Alert>\r\n                    )}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter new password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm new password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"primary\" \r\n                            className=\"w-100\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Resetting...' : 'Reset Password'}\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}